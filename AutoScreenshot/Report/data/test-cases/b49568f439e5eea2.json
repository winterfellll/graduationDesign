{"uid":"b49568f439e5eea2","name":"test_01","fullName":"test_1.Test#test_01","historyId":"aa1bee1b32a2e3484e7500caa25450c7","time":{"start":1678765009111,"stop":1678765014153,"duration":5042},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[1]/div[2]/div[1]/div[112]/ul/li[7]/div/div[2]/div[4]/ul[1]/li[8]/a\"}\n  (Session info: chrome=111.0.5563.64)\nStacktrace:\n0   chromedriver                        0x0000000100e1d428 chromedriver + 4899880\n1   chromedriver                        0x0000000100d9aa23 chromedriver + 4364835\n2   chromedriver                        0x00000001009e4bf6 chromedriver + 474102\n3   chromedriver                        0x0000000100a284f0 chromedriver + 750832\n4   chromedriver                        0x0000000100a28751 chromedriver + 751441\n5   chromedriver                        0x0000000100a6c834 chromedriver + 1030196\n6   chromedriver                        0x0000000100a4e58d chromedriver + 906637\n7   chromedriver                        0x0000000100a69b5b chromedriver + 1018715\n8   chromedriver                        0x0000000100a4e333 chromedriver + 906035\n9   chromedriver                        0x0000000100a1855f chromedriver + 685407\n10  chromedriver                        0x0000000100a19a7e chromedriver + 690814\n11  chromedriver                        0x0000000100dea79e chromedriver + 4691870\n12  chromedriver                        0x0000000100def961 chromedriver + 4712801\n13  chromedriver                        0x0000000100df62ff chromedriver + 4739839\n14  chromedriver                        0x0000000100df085a chromedriver + 4716634\n15  chromedriver                        0x0000000100dc2fce chromedriver + 4530126\n16  chromedriver                        0x0000000100e105c8 chromedriver + 4847048\n17  chromedriver                        0x0000000100e10747 chromedriver + 4847431\n18  chromedriver                        0x0000000100e2587f chromedriver + 4933759\n19  libsystem_pthread.dylib             0x00007ff8047204e1 _pthread_start + 125\n20  libsystem_pthread.dylib             0x00007ff80471bf6b thread_start + 15","statusTrace":"self = <test_1.Test object at 0x7fd77e461d90>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"0952ae707851f9f2af6482cbd4a2b09c\")>\n\n    def test_01(self, driver):\n>       text = driver.find_element(By.XPATH, '/html/body/div[1]/div[2]/div[1]/div[112]/ul/li[7]/div/div[2]/div[4]/ul[1]/li[8]/a').text\n\ntest_1.py:9: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:855: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:428: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fd77e480040>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...ff8047204e1 _pthread_start + 125\\\\n20  libsystem_pthread.dylib             0x00007ff80471bf6b thread_start + 15\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get('methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"{}.{}\".format(frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[1]/div[2]/div[1]/div[112]/ul/li[7]/div/div[2]/div[4]/ul[1]/li[8]/a\"}\nE         (Session info: chrome=111.0.5563.64)\nE       Stacktrace:\nE       0   chromedriver                        0x0000000100e1d428 chromedriver + 4899880\nE       1   chromedriver                        0x0000000100d9aa23 chromedriver + 4364835\nE       2   chromedriver                        0x00000001009e4bf6 chromedriver + 474102\nE       3   chromedriver                        0x0000000100a284f0 chromedriver + 750832\nE       4   chromedriver                        0x0000000100a28751 chromedriver + 751441\nE       5   chromedriver                        0x0000000100a6c834 chromedriver + 1030196\nE       6   chromedriver                        0x0000000100a4e58d chromedriver + 906637\nE       7   chromedriver                        0x0000000100a69b5b chromedriver + 1018715\nE       8   chromedriver                        0x0000000100a4e333 chromedriver + 906035\nE       9   chromedriver                        0x0000000100a1855f chromedriver + 685407\nE       10  chromedriver                        0x0000000100a19a7e chromedriver + 690814\nE       11  chromedriver                        0x0000000100dea79e chromedriver + 4691870\nE       12  chromedriver                        0x0000000100def961 chromedriver + 4712801\nE       13  chromedriver                        0x0000000100df62ff chromedriver + 4739839\nE       14  chromedriver                        0x0000000100df085a chromedriver + 4716634\nE       15  chromedriver                        0x0000000100dc2fce chromedriver + 4530126\nE       16  chromedriver                        0x0000000100e105c8 chromedriver + 4847048\nE       17  chromedriver                        0x0000000100e10747 chromedriver + 4847431\nE       18  chromedriver                        0x0000000100e2587f chromedriver + 4933759\nE       19  libsystem_pthread.dylib             0x00007ff8047204e1 _pthread_start + 125\nE       20  libsystem_pthread.dylib             0x00007ff80471bf6b thread_start + 15\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py:243: NoSuchElementException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1678764998871,"stop":1678765009108,"duration":10237},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[1]/div[2]/div[1]/div[112]/ul/li[7]/div/div[2]/div[4]/ul[1]/li[8]/a\"}\n  (Session info: chrome=111.0.5563.64)\nStacktrace:\n0   chromedriver                        0x0000000100e1d428 chromedriver + 4899880\n1   chromedriver                        0x0000000100d9aa23 chromedriver + 4364835\n2   chromedriver                        0x00000001009e4bf6 chromedriver + 474102\n3   chromedriver                        0x0000000100a284f0 chromedriver + 750832\n4   chromedriver                        0x0000000100a28751 chromedriver + 751441\n5   chromedriver                        0x0000000100a6c834 chromedriver + 1030196\n6   chromedriver                        0x0000000100a4e58d chromedriver + 906637\n7   chromedriver                        0x0000000100a69b5b chromedriver + 1018715\n8   chromedriver                        0x0000000100a4e333 chromedriver + 906035\n9   chromedriver                        0x0000000100a1855f chromedriver + 685407\n10  chromedriver                        0x0000000100a19a7e chromedriver + 690814\n11  chromedriver                        0x0000000100dea79e chromedriver + 4691870\n12  chromedriver                        0x0000000100def961 chromedriver + 4712801\n13  chromedriver                        0x0000000100df62ff chromedriver + 4739839\n14  chromedriver                        0x0000000100df085a chromedriver + 4716634\n15  chromedriver                        0x0000000100dc2fce chromedriver + 4530126\n16  chromedriver                        0x0000000100e105c8 chromedriver + 4847048\n17  chromedriver                        0x0000000100e10747 chromedriver + 4847431\n18  chromedriver                        0x0000000100e2587f chromedriver + 4933759\n19  libsystem_pthread.dylib             0x00007ff8047204e1 _pthread_start + 125\n20  libsystem_pthread.dylib             0x00007ff80471bf6b thread_start + 15","statusTrace":"self = <test_1.Test object at 0x7fd77e461d90>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"0952ae707851f9f2af6482cbd4a2b09c\")>\n\n    def test_01(self, driver):\n>       text = driver.find_element(By.XPATH, '/html/body/div[1]/div[2]/div[1]/div[112]/ul/li[7]/div/div[2]/div[4]/ul[1]/li[8]/a').text\n\ntest_1.py:9: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:855: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:428: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fd77e480040>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...ff8047204e1 _pthread_start + 125\\\\n20  libsystem_pthread.dylib             0x00007ff80471bf6b thread_start + 15\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get('methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"{}.{}\".format(frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[1]/div[2]/div[1]/div[112]/ul/li[7]/div/div[2]/div[4]/ul[1]/li[8]/a\"}\nE         (Session info: chrome=111.0.5563.64)\nE       Stacktrace:\nE       0   chromedriver                        0x0000000100e1d428 chromedriver + 4899880\nE       1   chromedriver                        0x0000000100d9aa23 chromedriver + 4364835\nE       2   chromedriver                        0x00000001009e4bf6 chromedriver + 474102\nE       3   chromedriver                        0x0000000100a284f0 chromedriver + 750832\nE       4   chromedriver                        0x0000000100a28751 chromedriver + 751441\nE       5   chromedriver                        0x0000000100a6c834 chromedriver + 1030196\nE       6   chromedriver                        0x0000000100a4e58d chromedriver + 906637\nE       7   chromedriver                        0x0000000100a69b5b chromedriver + 1018715\nE       8   chromedriver                        0x0000000100a4e333 chromedriver + 906035\nE       9   chromedriver                        0x0000000100a1855f chromedriver + 685407\nE       10  chromedriver                        0x0000000100a19a7e chromedriver + 690814\nE       11  chromedriver                        0x0000000100dea79e chromedriver + 4691870\nE       12  chromedriver                        0x0000000100def961 chromedriver + 4712801\nE       13  chromedriver                        0x0000000100df62ff chromedriver + 4739839\nE       14  chromedriver                        0x0000000100df085a chromedriver + 4716634\nE       15  chromedriver                        0x0000000100dc2fce chromedriver + 4530126\nE       16  chromedriver                        0x0000000100e105c8 chromedriver + 4847048\nE       17  chromedriver                        0x0000000100e10747 chromedriver + 4847431\nE       18  chromedriver                        0x0000000100e2587f chromedriver + 4933759\nE       19  libsystem_pthread.dylib             0x00007ff8047204e1 _pthread_start + 125\nE       20  libsystem_pthread.dylib             0x00007ff80471bf6b thread_start + 15\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py:243: NoSuchElementException","steps":[],"attachments":[{"uid":"9c479f853c09a893","name":"失败截图","source":"9c479f853c09a893.png","type":"image/png","size":195951}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"suite","value":"test_1"},{"name":"subSuite","value":"Test"},{"name":"host","value":"LOSS.local"},{"name":"thread","value":"4482-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_1"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"b49568f439e5eea2.json","parameterValues":[]}