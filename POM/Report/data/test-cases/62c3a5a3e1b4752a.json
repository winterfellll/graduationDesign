{"uid":"62c3a5a3e1b4752a","name":"test_01","fullName":"TestCase.test_1.Test#test_01","historyId":"857f429c6418f6c6f3eb73f8249723cb","time":{"start":1673258681593,"stop":1673258686633,"duration":5040},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[1]/div[2]/div[1]/d1iv[1]/div[2]/ul[1]/li[6]/a\"}\n  (Session info: chrome=108.0.5359.124)\nStacktrace:\n0   chromedriver                        0x000000010eb242c8 chromedriver + 4752072\n1   chromedriver                        0x000000010eaa4463 chromedriver + 4228195\n2   chromedriver                        0x000000010e707b18 chromedriver + 441112\n3   chromedriver                        0x000000010e744e21 chromedriver + 691745\n4   chromedriver                        0x000000010e745061 chromedriver + 692321\n5   chromedriver                        0x000000010e7805e4 chromedriver + 935396\n6   chromedriver                        0x000000010e765d2d chromedriver + 826669\n7   chromedriver                        0x000000010e77e134 chromedriver + 926004\n8   chromedriver                        0x000000010e765b33 chromedriver + 826163\n9   chromedriver                        0x000000010e7369fd chromedriver + 633341\n10  chromedriver                        0x000000010e738051 chromedriver + 639057\n11  chromedriver                        0x000000010eaf130e chromedriver + 4543246\n12  chromedriver                        0x000000010eaf5a88 chromedriver + 4561544\n13  chromedriver                        0x000000010eafd6df chromedriver + 4593375\n14  chromedriver                        0x000000010eaf68fa chromedriver + 4565242\n15  chromedriver                        0x000000010eacc2cf chromedriver + 4391631\n16  chromedriver                        0x000000010eb155b8 chromedriver + 4691384\n17  chromedriver                        0x000000010eb15739 chromedriver + 4691769\n18  chromedriver                        0x000000010eb2b81e chromedriver + 4782110\n19  libsystem_pthread.dylib             0x00007ff8019fc4e1 _pthread_start + 125\n20  libsystem_pthread.dylib             0x00007ff8019f7f6b thread_start + 15","statusTrace":"self = <test_1.Test object at 0x7ff2f5a944f0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"4ebad2696412a9d73b0bf462a96f31dc\")>\n\n    def test_01(self, driver):\n        a = mainPage(driver)\n>       a.click()\n\nTestCase/test_1.py:10: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nPageObject/main_page.py:11: in click\n    self.find(self.video).click()\nBasePage/base_page.py:9: in find\n    return self.driver.find_element(*args)\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:855: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:428: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ff2f5a947c0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...ff8019fc4e1 _pthread_start + 125\\\\n20  libsystem_pthread.dylib             0x00007ff8019f7f6b thread_start + 15\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get('methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"{}.{}\".format(frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[1]/div[2]/div[1]/d1iv[1]/div[2]/ul[1]/li[6]/a\"}\nE         (Session info: chrome=108.0.5359.124)\nE       Stacktrace:\nE       0   chromedriver                        0x000000010eb242c8 chromedriver + 4752072\nE       1   chromedriver                        0x000000010eaa4463 chromedriver + 4228195\nE       2   chromedriver                        0x000000010e707b18 chromedriver + 441112\nE       3   chromedriver                        0x000000010e744e21 chromedriver + 691745\nE       4   chromedriver                        0x000000010e745061 chromedriver + 692321\nE       5   chromedriver                        0x000000010e7805e4 chromedriver + 935396\nE       6   chromedriver                        0x000000010e765d2d chromedriver + 826669\nE       7   chromedriver                        0x000000010e77e134 chromedriver + 926004\nE       8   chromedriver                        0x000000010e765b33 chromedriver + 826163\nE       9   chromedriver                        0x000000010e7369fd chromedriver + 633341\nE       10  chromedriver                        0x000000010e738051 chromedriver + 639057\nE       11  chromedriver                        0x000000010eaf130e chromedriver + 4543246\nE       12  chromedriver                        0x000000010eaf5a88 chromedriver + 4561544\nE       13  chromedriver                        0x000000010eafd6df chromedriver + 4593375\nE       14  chromedriver                        0x000000010eaf68fa chromedriver + 4565242\nE       15  chromedriver                        0x000000010eacc2cf chromedriver + 4391631\nE       16  chromedriver                        0x000000010eb155b8 chromedriver + 4691384\nE       17  chromedriver                        0x000000010eb15739 chromedriver + 4691769\nE       18  chromedriver                        0x000000010eb2b81e chromedriver + 4782110\nE       19  libsystem_pthread.dylib             0x00007ff8019fc4e1 _pthread_start + 125\nE       20  libsystem_pthread.dylib             0x00007ff8019f7f6b thread_start + 15\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py:243: NoSuchElementException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1673258671105,"stop":1673258681590,"duration":10485},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[1]/div[2]/div[1]/d1iv[1]/div[2]/ul[1]/li[6]/a\"}\n  (Session info: chrome=108.0.5359.124)\nStacktrace:\n0   chromedriver                        0x000000010eb242c8 chromedriver + 4752072\n1   chromedriver                        0x000000010eaa4463 chromedriver + 4228195\n2   chromedriver                        0x000000010e707b18 chromedriver + 441112\n3   chromedriver                        0x000000010e744e21 chromedriver + 691745\n4   chromedriver                        0x000000010e745061 chromedriver + 692321\n5   chromedriver                        0x000000010e7805e4 chromedriver + 935396\n6   chromedriver                        0x000000010e765d2d chromedriver + 826669\n7   chromedriver                        0x000000010e77e134 chromedriver + 926004\n8   chromedriver                        0x000000010e765b33 chromedriver + 826163\n9   chromedriver                        0x000000010e7369fd chromedriver + 633341\n10  chromedriver                        0x000000010e738051 chromedriver + 639057\n11  chromedriver                        0x000000010eaf130e chromedriver + 4543246\n12  chromedriver                        0x000000010eaf5a88 chromedriver + 4561544\n13  chromedriver                        0x000000010eafd6df chromedriver + 4593375\n14  chromedriver                        0x000000010eaf68fa chromedriver + 4565242\n15  chromedriver                        0x000000010eacc2cf chromedriver + 4391631\n16  chromedriver                        0x000000010eb155b8 chromedriver + 4691384\n17  chromedriver                        0x000000010eb15739 chromedriver + 4691769\n18  chromedriver                        0x000000010eb2b81e chromedriver + 4782110\n19  libsystem_pthread.dylib             0x00007ff8019fc4e1 _pthread_start + 125\n20  libsystem_pthread.dylib             0x00007ff8019f7f6b thread_start + 15","statusTrace":"self = <test_1.Test object at 0x7ff2f5a944f0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"4ebad2696412a9d73b0bf462a96f31dc\")>\n\n    def test_01(self, driver):\n        a = mainPage(driver)\n>       a.click()\n\nTestCase/test_1.py:10: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nPageObject/main_page.py:11: in click\n    self.find(self.video).click()\nBasePage/base_page.py:9: in find\n    return self.driver.find_element(*args)\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:855: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:428: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ff2f5a947c0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...ff8019fc4e1 _pthread_start + 125\\\\n20  libsystem_pthread.dylib             0x00007ff8019f7f6b thread_start + 15\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get('methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"{}.{}\".format(frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[1]/div[2]/div[1]/d1iv[1]/div[2]/ul[1]/li[6]/a\"}\nE         (Session info: chrome=108.0.5359.124)\nE       Stacktrace:\nE       0   chromedriver                        0x000000010eb242c8 chromedriver + 4752072\nE       1   chromedriver                        0x000000010eaa4463 chromedriver + 4228195\nE       2   chromedriver                        0x000000010e707b18 chromedriver + 441112\nE       3   chromedriver                        0x000000010e744e21 chromedriver + 691745\nE       4   chromedriver                        0x000000010e745061 chromedriver + 692321\nE       5   chromedriver                        0x000000010e7805e4 chromedriver + 935396\nE       6   chromedriver                        0x000000010e765d2d chromedriver + 826669\nE       7   chromedriver                        0x000000010e77e134 chromedriver + 926004\nE       8   chromedriver                        0x000000010e765b33 chromedriver + 826163\nE       9   chromedriver                        0x000000010e7369fd chromedriver + 633341\nE       10  chromedriver                        0x000000010e738051 chromedriver + 639057\nE       11  chromedriver                        0x000000010eaf130e chromedriver + 4543246\nE       12  chromedriver                        0x000000010eaf5a88 chromedriver + 4561544\nE       13  chromedriver                        0x000000010eafd6df chromedriver + 4593375\nE       14  chromedriver                        0x000000010eaf68fa chromedriver + 4565242\nE       15  chromedriver                        0x000000010eacc2cf chromedriver + 4391631\nE       16  chromedriver                        0x000000010eb155b8 chromedriver + 4691384\nE       17  chromedriver                        0x000000010eb15739 chromedriver + 4691769\nE       18  chromedriver                        0x000000010eb2b81e chromedriver + 4782110\nE       19  libsystem_pthread.dylib             0x00007ff8019fc4e1 _pthread_start + 125\nE       20  libsystem_pthread.dylib             0x00007ff8019f7f6b thread_start + 15\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py:243: NoSuchElementException","steps":[],"attachments":[{"uid":"1376a1a43acdbda2","name":"失败截图","source":"1376a1a43acdbda2.png","type":"image/png","size":179379}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"TestCase"},{"name":"suite","value":"test_1"},{"name":"subSuite","value":"Test"},{"name":"host","value":"LOSS.local"},{"name":"thread","value":"11845-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"TestCase.test_1"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"62c3a5a3e1b4752a.json","parameterValues":[]}